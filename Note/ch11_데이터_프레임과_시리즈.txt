ch11 데이터 프레임과 시리즈
	1절 판다스 패키지
		데이터 분석을 위해 반드시 알아야 할 패키지.
		2차원 구조인 데이터프레임, 1차원 구조인 시리즈 제공
		장점: 데이터프레임생성, 파일io, 레이블링, 부분데이터추출, 
		       크기변경,데이터 분할, 병합, 데이터구조변경,결측치 처리
	2절 데이터 프레임 만들기
		데이터프레임변수 = pd.DataFrame(데이터) (이후 데이터프레임변수는 df로 생략)
		df.to_dict() : 데이터프레임을 딕셔너리로
		df.to_numpy(), df.values : 데이터프레임을 넘파이로
		df.dtypes : 열의 타입
		df.info() : 데이터프레임 속성출력 ★
		df[열이름].astype(np.타입명) : 열이름의 값들의 타입을 타입명으로 변경, 단 결측치는 float64이므로 int로 형변환 불가
		df.shape : (행 갯수, 열갯수)로 리턴
	    2.3 read_csv	
		pd.read_csv('파일경로', 
				encoding = "인코딩명", sep="데이터를 나누는 문자", comment="주석처리문자" #생략가능
				parse_dates=[날짜열명]) # datetime64형으로 읽어올 필드 지정
		
	    2.4 패키지에서 가져오기
		sklearn(머신러닝 패키지) : from sklearn import datasets
		statsmodels(R 패키지) : from statsmodels.api import datasets
		seaborn(시각화 패키지) :import seaborn as sns
		df.feature_names : 데이터프레임의 열이름 확인
		[col[:-5].replace(' ',"_") for col in iris.feature_names] : 열 이름변경(특수문자는 _외엔 쓰지 않는 것이 좋음)
	3절 이름(열,행) 지정하기
	    3.1 열이름 지정하기
		df.columns=['열이름1','열이름2',....] : 열 이름 변경(한글 가능)
	    3.2 행이름 지정하기
		df.index=['행이름1','행이름2',.....] ; 행 이름 변경(한글가능)
	    3.3 레벨이름 지정하기
		df.columns(또는 index) = [[열(행)레벨명1,열(행)레벨명2,......]
		df.columns(또는 index).name=[열(행)레벨명1 제목, 열(행)레벨명2 제목] :동일한 열(행)레벨명들을 하나의 제목으로 묶음
	4절 부분 데이터 조회
	    4.1 단일 열 조회
		df['열이름'] 또는 df.열이름 : 단일 열
		df[['열이름1','열이름2',...]] : 다중 열 조회
	    4.2 loc을 이용한 조회
		df.loc[행이름,열이름] : 행과 열 이름으로 부분 데이터 조회( : 를 이용해 범위로 조회 가능, a:b는 a부터 b까지)
	    4.3 iloc을 이용한 조회
		df.iloc[행번호,열번호] : 행과 열 순번으로 부분데이터 조회 ( : 를 이용해 범위로 조회 가능, a:b는 a 부터 b 앞까지)
	    4.4 조건으로 조회하기
		df[조건]
		df.(i)loc[조건,출력할 (행)열들]
	5절 데이터 삭제 및 추가
	    5.1 데이터프레임의 요소 삭제
		df.drop(삭제할 열이름이나 행이름, axis)
	    5.2 데이터프레임의 요소 추가
		df[열이름]=열데이터(리스트,결측치 가능)
	6절 병합과 연결
	    6.1 merge()
		df1.merge(df2 ,how) :df1에 df2를 how의 방식으로 연결 
		(how는 'inner':내부조인, 'left':df1기준, 'right':df2기준, 'outer':외부조인)
	    6.2 concat()
		pd.concat([df1,df2,df3,....],axis) : axis=0 위아래로 연결, axis=1 좌우로 연결
	7절 정렬
	    행(axis=0) 또는 열(axis=1)이름으로 정렬
		df.sort_index(axis, inplace) : inplace는 정렬한 데이터를 df에 할당할지 선택
	    값에 의한 정렬
		df.sort_values(by,ascending) : by는 정렬할 값(값이 여러개면 앞에서부터), ascending는 정렬방식
	8절 기초통계분석
	    기본함수 : min, max, sum, cumsum(누적합) , cumprod(누적곱), mean, median
		df.함수()
	    요약통계량
		df.discribe()
	    공분산
		df.cov()
	     상관계수
		df.corr()
	9절 데이터 그룹화 및 집계
	     9.1 groupby
		df.pivot_table