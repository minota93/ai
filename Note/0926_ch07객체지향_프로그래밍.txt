ch07. 객체지향 프로그래밍
      1절 객체와 클래스
	class : 속성(변수)와 메소드(함수)를 갖는 객체를 만들기 위한 설계도
	        모든 클래스는 Object를 상속 받는다
	class 클래스명:
		변수나 함수들을 선언
		클래스변수
		__static 변수
		def __init__(self, [매개변수,...]):
			self.인스턴스변수=매개변수
		def __del__(self):
			객체 소멸시 수행할 명령어
		def  인스턴스메소드명(self,[매게변수,...]):
			명령여
		@classmethod
		def 클래스메소드명(cls, [매개변수,....]):
			cls.클래스변수와 관련된 로직(클래스명.클래스메소드명()호출)
		@staticmethod
		def 스테틱메소드명([매개변수,..])
			클래스변수나 인스턴스변수나 static 변수가 없는 로직
	변수명=클래스명()

	-인스턴스변수.__dict__ =>객체를 딕셔너리 형태로 보여줌
		ex.p.__dict__ => {'name' : '홍길동', 'gender' : '남자'}
      2절 생성자(__init__())와 소멸자(__del__)
	생성자 : init(self,[매개변수]....)객체가 생성될 때 자동 실행
	소멸자 : del(self) -객체가 소먈될 때 자동 실행
      3절 변수와 함수(메소드)
	인스턴트변수 vs 클래스변수 vs static변수(정적변수)
	인스턴트함수(self) vs 클래스함수(cls) vs static함수()
      4절 상속과 재정의
	class 자식클래스명(부모클래스명):
	부모클래스의 __init__는 자동으로 상속받지 않음
	(필요시 super().__init__로 __init__를 상속받을 수 있음)
	파이썬은 오버로딩을 지원하지 않기에 부모클래스의 함수가 마음에 들지 않으면 자식 클래스에서 재정의